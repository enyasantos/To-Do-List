{"ast":null,"code":"var _jsxFileName = \"/home/enya/Documentos/Projetos/to-do-list/frontend/src/pages/Form/index.js\";\nimport React, { useState } from 'react';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Form() {\n  const [error, setError] = useState('');\n  const [task, setTask] = useState('');\n  const [category, setCategory] = useState('');\n  const categories = [['Exercicío Físico'], ['Estudos'], ['Criatividade'], ['Comida'], ['Dinheiro'], ['Casa'], ['Ideia'], ['Viagem'], ['Padrão'], ['Pet'], ['Trabalho']];\n\n  async function handleCreateTask(e) {\n    e.preventDefault();\n    const data = {\n      tarefa: task,\n      categoria: category\n    };\n    if (task === '' || category === '') return setError('Preencha todos os campos');\n\n    try {\n      await api.post('tarefas', data);\n    } catch (err) {\n      alert(err.data);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, error ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, `ERRO: ${error}*`) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formAddTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"task\",\n    id: \"task\",\n    placeholder: \"Digite aqui a tarefa*\",\n    value: task,\n    onChange: e => setTask(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addTask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"selectCategory\",\n    className: \"selectCategory\",\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"--- Selecione uma categoria --- *\"), categories.map(caregory => /*#__PURE__*/React.createElement(\"option\", {\n    value: caregory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, caregory))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-addTask\",\n    onClick: e => {\n      handleCreateTask(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"+\"))));\n}","map":{"version":3,"sources":["/home/enya/Documentos/Projetos/to-do-list/frontend/src/pages/Form/index.js"],"names":["React","useState","api","Form","error","setError","task","setTask","category","setCategory","categories","handleCreateTask","e","preventDefault","data","tarefa","categoria","post","err","alert","target","value","map","caregory"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAO,cAAP;AAEA,eAAe,SAASC,IAAT,GAAgB;AAE3B,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEK,IAAF,EAAQC,OAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEO,QAAF,EAAYC,WAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMS,UAAU,GAAG,CACf,CAAE,kBAAF,CADe,EAEf,CAAE,SAAF,CAFe,EAGf,CAAE,cAAF,CAHe,EAIf,CAAE,QAAF,CAJe,EAKf,CAAE,UAAF,CALe,EAMf,CAAE,MAAF,CANe,EAOf,CAAE,OAAF,CAPe,EAQf,CAAE,QAAF,CARe,EASf,CAAE,QAAF,CATe,EAUf,CAAC,KAAD,CAVe,EAWf,CAAE,UAAF,CAXe,CAAnB;;AAcA,iBAAeC,gBAAf,CAAgCC,CAAhC,EAAmC;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AACTC,MAAAA,MAAM,EAAET,IADC;AAETU,MAAAA,SAAS,EAAER;AAFF,KAAb;AAIA,QAAGF,IAAI,KAAK,EAAT,IAAeE,QAAQ,KAAK,EAA/B,EAAmC,OAAOH,QAAQ,CAAC,0BAAD,CAAf;;AACnC,QAAI;AACA,YAAMH,GAAG,CAACe,IAAJ,CAAS,SAAT,EAAoBH,IAApB,CAAN;AACH,KAFD,CAEE,OAAOI,GAAP,EAAY;AACVC,MAAAA,KAAK,CAACD,GAAG,CAACJ,IAAL,CAAL;AACH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,gBACF;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuB,SAAQA,KAAM,GAArC,CADE,gBAEF;AAAG,IAAA,SAAS,EAAC,OAAb;AAAqB,IAAA,MAAM,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,eAKI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,EAAE,EAAC,MAHP;AAII,IAAA,WAAW,EAAC,uBAJhB;AAKI,IAAA,KAAK,EAAEE,IALX;AAMI,IAAA,QAAQ,EAAIM,CAAC,IAAIL,OAAO,CAACK,CAAC,CAACQ,MAAF,CAASC,KAAV,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,gBADT;AAEI,IAAA,SAAS,EAAC,gBAFd;AAGI,IAAA,KAAK,EAAEb,QAHX;AAII,IAAA,QAAQ,EAAGI,CAAC,IAAIH,WAAW,CAACG,CAAC,CAACQ,MAAF,CAASC,KAAV,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCANJ,EAOKX,UAAU,CAACY,GAAX,CAAeC,QAAQ,iBACpB;AAAQ,IAAA,KAAK,EAAEA,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QADL,CADH,CAPL,CADJ,eAcI;AACQ,IAAA,SAAS,EAAC,aADlB;AAEQ,IAAA,OAAO,EAAGX,CAAD,IAAO;AACZD,MAAAA,gBAAgB,CAACC,CAAD,CAAhB;AACH,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAdJ,CATJ,CALJ,CADJ;AAyCH","sourcesContent":["import React, { useState } from 'react';\n\nimport api from '../../services/api';\n\nimport './styles.css';\n\nexport default function Form() {\n\n    const [ error, setError ] = useState('');\n    const [ task, setTask ] = useState('');\n    const [ category, setCategory ] = useState('');\n\n    const categories = [\n        [ 'Exercicío Físico'],\n        [ 'Estudos'],\n        [ 'Criatividade'],\n        [ 'Comida'],\n        [ 'Dinheiro'],\n        [ 'Casa'],\n        [ 'Ideia'],\n        [ 'Viagem'],\n        [ 'Padrão'],\n        ['Pet'],\n        [ 'Trabalho'],\n    ];\n\n    async function handleCreateTask(e) {\n        e.preventDefault();\n        const data = {\n            tarefa: task,\n            categoria: category,\n        };\n        if(task === '' || category === '') return setError('Preencha todos os campos');\n        try {\n            await api.post('tarefas', data);\n        } catch (err) {\n            alert(err.data);\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            {error \n            ?   <p className=\"error\">{`ERRO: ${error}*`}</p>\n            :   <p className=\"error\" hidden></p>\n            }\n            <form className=\"formAddTask\">\n                <input \n                    type=\"text\" \n                    name=\"task\" \n                    id=\"task\" \n                    placeholder=\"Digite aqui a tarefa*\"\n                    value={task}\n                    onChange={  e => setTask(e.target.value) }\n                />\n                <div className=\"addTask\">\n                    <select \n                        name=\"selectCategory\" \n                        className=\"selectCategory\"\n                        value={category}\n                        onChange={ e => setCategory(e.target.value) }\n                    >\n                        <option value=\"\">--- Selecione uma categoria --- *</option>\n                        {categories.map(caregory => (\n                            <option value={caregory}>\n                                {caregory}\n                            </option> \n                        ))}\n                    </select>\n                    <button \n                            className=\"btn-addTask\"\n                            onClick={(e) => {  \n                                handleCreateTask(e);\n                            }}\n                        >\n                            +\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}